//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__RANDOMUNIFORM__22_H
# define OPERATOR_OPERATOR__AI_ONNX__RANDOMUNIFORM__22_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'RandomUniform' version 22
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Generate a tensor with random values drawn from a uniform distribution. The shape
 * of the tensor is specified by the `shape` argument and the range by `low` and `high`.
 * 
 * The data type is specified by the 'dtype' argument. The 'dtype' argument must
 * be one of the data types specified in the 'DataType' enum field in the
 * TensorProto message.
 * 
 * Constraint T:
 *   Constrain output types to float tensors.
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16

 * Output T output:
 *   Output tensor of random values drawn from uniform distribution
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Attribute INT dtype (optional):
 *   The data type for the elements of the output tensor. If not specified,
 *   default is TensorProto::FLOAT.
 * 
 * Attribute FLOAT high (optional):
 *   Upper boundary of the output values.
 * 
 * Attribute FLOAT low (optional):
 *   Lower boundary of the output values.
 * 
 * Attribute FLOAT seed (optional):
 *   (Optional) Seed to the random generator, if not specified we will auto
 *   generate one.
 * 
 * Attribute INTS shape :
 *   The shape of the output tensor.
 *
 * @since version 22
 *
 * @see github/workspace/onnx/defs/generator/defs.cc:192
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#RandomUniform
 */

operator_status
prepare_operator__ai_onnx__randomuniform__22(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__randomuniform__22;

typedef struct {
// no attributes
} context_operator__ai_onnx__randomuniform__22;

operator_executer
resolve_operator__ai_onnx__randomuniform__22(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__randomuniform__22(
    node_context *ctx
);

# endif