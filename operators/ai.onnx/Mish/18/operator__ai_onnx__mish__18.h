//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__MISH__18_H
# define OPERATOR_OPERATOR__AI_ONNX__MISH__18_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Mish' version 18
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Mish: A Self Regularized Non-Monotonic Neural Activation Function.
 * 
 * Perform the linear unit element-wise on the input tensor X using formula:
 * 
 * ```
 * mish(x) = x * tanh(softplus(x)) = x * tanh(ln(1 + e^{x}))
 * ```
 * 
 * Constraint T:
 *   Constrain input X and output types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Input T X:
 *   Input tensor
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T Y:
 *   Output tensor
 *   Allowed Types: tensor_double, tensor_float, tensor_float16

 *
 * @since version 18
 *
 * @see github/workspace/onnx/defs/math/old.cc:846
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Mish
 */

operator_status
prepare_operator__ai_onnx__mish__18(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__mish__18;

typedef struct {
// no attributes
} context_operator__ai_onnx__mish__18;

operator_executer
resolve_operator__ai_onnx__mish__18(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__mish__18(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__mish__18__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__mish__18__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__mish__18__T_tensor_float16(
    node_context *ctx
);

# endif