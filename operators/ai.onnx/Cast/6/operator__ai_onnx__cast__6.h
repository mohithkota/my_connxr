//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__CAST__6_H
# define OPERATOR_OPERATOR__AI_ONNX__CAST__6_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Cast' version 6
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * The operator casts the elements of a given input tensor to a data type
 * specified by the 'to' argument and returns an output tensor of the same size in
 * the converted type. The 'to' argument must be one of the data types specified
 * in the 'DataType' enum field in the TensorProto message.
 * NOTE: Casting to and from strings is not supported yet.
 * 
 * Constraint T1:
 *   Constrain input types. Casting from strings and complex are not
 *   supported.
 *   Allowed Types: tensor_bool, tensor_double, tensor_float, tensor_float16,
 *                  tensor_int16, tensor_int32, tensor_int64, tensor_int8,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * 
 * Constraint T2:
 *   Constrain output types. Casting to strings and complex are not supported.
 *   Allowed Types: tensor_bool, tensor_double, tensor_float, tensor_float16,
 *                  tensor_int16, tensor_int32, tensor_int64, tensor_int8,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * Input T1 input:
 *   Input tensor to be cast.
 *   Allowed Types: tensor_bool, tensor_double, tensor_float, tensor_float16,
 *                  tensor_int16, tensor_int32, tensor_int64, tensor_int8,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * Output T2 output:
 *   Output tensor with the same shape as input with type specified by the
 *   'to' argument
 *   Allowed Types: tensor_bool, tensor_double, tensor_float, tensor_float16,
 *                  tensor_int16, tensor_int32, tensor_int64, tensor_int8,
 *                  tensor_uint16, tensor_uint32, tensor_uint64, tensor_uint8
 * Attribute INT to :
 *   The data type to which the elements of the input tensor are cast.
 *   Strictly must be one of the types from DataType enum in TensorProto
 *
 * @since version 6
 *
 * @see github/workspace/onnx/defs/tensor/old.cc:4131
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Cast
 */

operator_status
prepare_operator__ai_onnx__cast__6(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__cast__6;

typedef struct {
// no attributes
} context_operator__ai_onnx__cast__6;

operator_executer
resolve_operator__ai_onnx__cast__6(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_bool(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_float16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_int16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_int32(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_int64(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_int8(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_uint16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_uint32(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_uint64(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__cast__6__T1_tensor_uint8(
    node_context *ctx
);

# endif