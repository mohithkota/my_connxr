//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX_ML__IMPUTER__1_H
# define OPERATOR_OPERATOR__AI_ONNX_ML__IMPUTER__1_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx.ml operator 'Imputer' version 1
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Replaces inputs that equal one value with another, leaving all other elements alone.<br>
 *     This operator is typically used to replace missing values in situations where they have a canonical
 *     representation, such as -1, 0, NaN, or some extreme value.<br>
 *     One and only one of imputed_value_floats or imputed_value_int64s should be defined -- floats if the input tensor
 *     holds floats, integers if the input tensor holds integers. The imputed values must all fit within the
 *     width of the tensor element type. One and only one of the replaced_value_float or replaced_value_int64 should be defined,
 *     which one depends on whether floats or integers are being processed.<br>
 *     The imputed_value attribute length can be 1 element, or it can have one element per input feature.<br>In other words, if the input tensor has the shape [*,F], then the length of the attribute array may be 1 or F. If it is 1, then it is broadcast along the last dimension and applied to each feature.
 * 
 * Constraint T:
 *   The input type must be a tensor of a numeric type, either [N,C] or [C].
 *   The output type will be of the same tensor type and shape.
 *   Allowed Types: tensor_double, tensor_float, tensor_int32, tensor_int64
 * Input T X:
 *   Data to be processed.
 *   Allowed Types: tensor_double, tensor_float, tensor_int32, tensor_int64
 * Output T Y:
 *   Imputed output data
 *   Allowed Types: tensor_double, tensor_float, tensor_int32, tensor_int64
 * Attribute FLOATS imputed_value_floats (optional):
 *   Value(s) to change to
 * 
 * Attribute INTS imputed_value_int64s (optional):
 *   Value(s) to change to.
 * 
 * Attribute FLOAT replaced_value_float (optional):
 *   A value that needs replacing.
 * 
 * Attribute INT replaced_value_int64 (optional):
 *   A value that needs replacing.
 *
 * @since version 1
 *
 * @see github/workspace/onnx/defs/traditionalml/defs.cc:293
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators-ml.md#Imputer
 */

operator_status
prepare_operator__ai_onnx_ml__imputer__1(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx_ml__imputer__1;

typedef struct {
// no attributes
} context_operator__ai_onnx_ml__imputer__1;

operator_executer
resolve_operator__ai_onnx_ml__imputer__1(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx_ml__imputer__1(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx_ml__imputer__1__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx_ml__imputer__1__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx_ml__imputer__1__T_tensor_int32(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx_ml__imputer__1__T_tensor_int64(
    node_context *ctx
);

# endif