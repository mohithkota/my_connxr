//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__STRINGNORMALIZER__10_H
# define OPERATOR_OPERATOR__AI_ONNX__STRINGNORMALIZER__10_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'StringNormalizer' version 10
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * StringNormalization performs string operations for basic cleaning.
 * This operator has only one input (denoted by X) and only one output
 * (denoted by Y). This operator first examines the elements in the X,
 * and removes elements specified in "stopwords" attribute.
 * After removing stop words, the intermediate result can be further lowercased,
 * uppercased, or just returned depending the "case_change_action" attribute.
 * This operator only accepts [C]- and [1, C]-tensor.
 * If all elements in X are dropped, the output will be the empty value of string tensor with shape [1]
 * if input shape is [C] and shape [1, 1] if input shape is [1, C].
 * 

 * Input tensor(string) X:
 *   UTF-8 strings to normalize
 *   Allowed Types: tensor_string
 * Output tensor(string) Y:
 *   UTF-8 Normalized strings
 *   Allowed Types: tensor_string
 * Attribute STRING case_change_action (optional):
 *   string enum that cases output to be lowercased/uppercases/unchanged.
 *   Valid values are "LOWER", "UPPER", "NONE". Default is "NONE"
 * 
 * Attribute INT is_case_sensitive (optional):
 *   Boolean. Whether the identification of stop words in X is case-sensitive.
 *   Default is false
 * 
 * Attribute STRING locale (optional):
 *   Environment dependent string that denotes the locale according to which
 *   output strings needs to be upper/lowercased.Default en_US or platform
 *   specific equivalent as decided by the implementation.
 * 
 * Attribute STRINGS stopwords (optional):
 *   List of stop words. If not set, no word would be removed from X.
 *
 * @since version 10
 *
 * @see github/workspace/onnx/defs/text/defs.cc:143
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#StringNormalizer
 */

operator_status
prepare_operator__ai_onnx__stringnormalizer__10(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__stringnormalizer__10;

typedef struct {
// no attributes
} context_operator__ai_onnx__stringnormalizer__10;

operator_executer
resolve_operator__ai_onnx__stringnormalizer__10(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__stringnormalizer__10(
    node_context *ctx
);

# endif