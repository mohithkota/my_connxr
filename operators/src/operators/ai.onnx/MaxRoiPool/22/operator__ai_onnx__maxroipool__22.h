//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__MAXROIPOOL__22_H
# define OPERATOR_OPERATOR__AI_ONNX__MAXROIPOOL__22_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'MaxRoiPool' version 22
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * ROI max pool consumes an input tensor X and region of interests (RoIs) to
 *  apply max pooling across each RoI, to produce output 4-D tensor of shape
 *  (num_rois, channels, pooled_shape[0], pooled_shape[1]).
 * 
 * Constraint T:
 *   Constrain input and output types to float tensors.
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Input T X:
 *   Input data tensor from the previous operator; dimensions for image case
 *   are (N x C x H x W), where N is the batch size, C is the number of
 *   channels, and H and W are the height and the width of the data.
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * 
 * Input T rois:
 *   RoIs (Regions of Interest) to pool over. Should be a 2-D tensor of shape
 *   (num_rois, 5) given as [[batch_id, x1, y1, x2, y2], ...].
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Output T Y:
 *   RoI pooled output 4-D tensor of shape (num_rois, channels,
 *   pooled_shape[0], pooled_shape[1]).
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Attribute INTS pooled_shape :
 *   ROI pool output shape (height, width).
 * 
 * Attribute FLOAT spatial_scale (optional):
 *   Multiplicative spatial scale factor to translate ROI coordinates from
 *   their input scale to the scale used when pooling.
 *
 * @since version 22
 *
 * @see github/workspace/onnx/defs/nn/defs.cc:730
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#MaxRoiPool
 */

operator_status
prepare_operator__ai_onnx__maxroipool__22(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__maxroipool__22;

typedef struct {
// no attributes
} context_operator__ai_onnx__maxroipool__22;

operator_executer
resolve_operator__ai_onnx__maxroipool__22(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__maxroipool__22(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__maxroipool__22__T_tensor_bfloat16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__maxroipool__22__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__maxroipool__22__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__maxroipool__22__T_tensor_float16(
    node_context *ctx
);

# endif