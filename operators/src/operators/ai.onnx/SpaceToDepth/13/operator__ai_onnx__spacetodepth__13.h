//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__SPACETODEPTH__13_H
# define OPERATOR_OPERATOR__AI_ONNX__SPACETODEPTH__13_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'SpaceToDepth' version 13
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * SpaceToDepth rearranges blocks of spatial data into depth. More specifically,
 * this op outputs a copy of the input tensor where values from the height and width dimensions
 * are moved to the depth dimension.
 * 
 * Constraint T:
 *   Constrain input and output types to all tensor types.
 *   Allowed Types: tensor_bfloat16, tensor_bool, tensor_complex128,
 *                  tensor_complex64, tensor_double, tensor_float,
 *                  tensor_float16, tensor_int16, tensor_int32, tensor_int64,
 *                  tensor_int8, tensor_string, tensor_uint16, tensor_uint32,
 *                  tensor_uint64, tensor_uint8
 * Input T input:
 *   Input tensor of [N,C,H,W], where N is the batch axis, C is the channel or
 *   depth, H is the height and W is the width.
 *   Allowed Types: tensor_bfloat16, tensor_bool, tensor_complex128,
 *                  tensor_complex64, tensor_double, tensor_float,
 *                  tensor_float16, tensor_int16, tensor_int32, tensor_int64,
 *                  tensor_int8, tensor_string, tensor_uint16, tensor_uint32,
 *                  tensor_uint64, tensor_uint8
 * Output T output:
 *   Output tensor of [N, C * blocksize * blocksize, H/blocksize,
 *   W/blocksize].
 *   Allowed Types: tensor_bfloat16, tensor_bool, tensor_complex128,
 *                  tensor_complex64, tensor_double, tensor_float,
 *                  tensor_float16, tensor_int16, tensor_int32, tensor_int64,
 *                  tensor_int8, tensor_string, tensor_uint16, tensor_uint32,
 *                  tensor_uint64, tensor_uint8
 * Attribute INT blocksize :
 *   Blocks of [blocksize, blocksize] are moved.
 *
 * @since version 13
 *
 * @see github/workspace/onnx/defs/tensor/defs.cc:1889
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#SpaceToDepth
 */

operator_status
prepare_operator__ai_onnx__spacetodepth__13(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__spacetodepth__13;

typedef struct {
// no attributes
} context_operator__ai_onnx__spacetodepth__13;

operator_executer
resolve_operator__ai_onnx__spacetodepth__13(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_bfloat16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_bool(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_complex128(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_complex64(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_float16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_int16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_int32(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_int64(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_int8(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_string(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_uint16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_uint32(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_uint64(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__spacetodepth__13__T_tensor_uint8(
    node_context *ctx
);

# endif