//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__PRELU__7_H
# define OPERATOR_OPERATOR__AI_ONNX__PRELU__7_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'PRelu' version 7
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * PRelu takes input data (Tensor<T>) and slope tensor as input, and produces one
 * output data (Tensor<T>) where the function `f(x) = slope * x for x < 0`,
 * `f(x) = x for x >= 0`., is applied to the data tensor elementwise.
 * This operator supports **unidirectional broadcasting** (tensor slope should be unidirectional broadcastable to input tensor X); for more details please check [the doc](Broadcasting.md).
 * 
 * Constraint T:
 *   Constrain input and output types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Input T X:
 *   Input tensor
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * 
 * Input T slope:
 *   Slope tensor. The shape of slope can be smaller than first input X; if
 *   so, its shape must be unidirectional broadcastable to X
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T Y:
 *   Output tensor (same size as X)
 *   Allowed Types: tensor_double, tensor_float, tensor_float16

 *
 * @since version 7
 *
 * @see github/workspace/onnx/defs/math/old.cc:3057
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#PRelu
 */

operator_status
prepare_operator__ai_onnx__prelu__7(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__prelu__7;

typedef struct {
// no attributes
} context_operator__ai_onnx__prelu__7;

operator_executer
resolve_operator__ai_onnx__prelu__7(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__prelu__7(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__prelu__7__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__prelu__7__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__prelu__7__T_tensor_float16(
    node_context *ctx
);

# endif