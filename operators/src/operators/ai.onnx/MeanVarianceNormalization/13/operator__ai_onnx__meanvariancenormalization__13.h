//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__MEANVARIANCENORMALIZATION__13_H
# define OPERATOR_OPERATOR__AI_ONNX__MEANVARIANCENORMALIZATION__13_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'MeanVarianceNormalization' version 13
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * A MeanVarianceNormalization Function: Perform mean variance normalization
 *       on the input tensor X using formula: `(X-EX)/sqrt(E(X-EX)^2)`
 * 
 * Constraint T:
 *   Constrain input and output types to all numeric tensors.
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Input T X:
 *   Input tensor
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Output T Y:
 *   Output tensor
 *   Allowed Types: tensor_bfloat16, tensor_double, tensor_float,
 *                  tensor_float16
 * Attribute INTS axes (optional):
 *   A list of integers, along which to reduce. The default is to calculate
 *   along axes [0,2,3] for calculating mean and variance along each channel.
 *   Two variables with the same C-coordinate are associated with the same mean
 *   and variance.
 *
 * @since version 13
 *
 * @see github/workspace/onnx/defs/nn/defs.cc:2215
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#MeanVarianceNormalization
 */

operator_status
prepare_operator__ai_onnx__meanvariancenormalization__13(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__meanvariancenormalization__13;

typedef struct {
// no attributes
} context_operator__ai_onnx__meanvariancenormalization__13;

operator_executer
resolve_operator__ai_onnx__meanvariancenormalization__13(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__meanvariancenormalization__13(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__meanvariancenormalization__13__T_tensor_bfloat16(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__meanvariancenormalization__13__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__meanvariancenormalization__13__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__meanvariancenormalization__13__T_tensor_float16(
    node_context *ctx
);

# endif