//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__CELU__12_H
# define OPERATOR_OPERATOR__AI_ONNX__CELU__12_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Celu' version 12
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Continuously Differentiable Exponential Linear Units:
 * Perform the linear unit element-wise on the input tensor X
 * using formula:
 * 
 * ```
 * max(0,x) + min(0,alpha*(exp(x/alpha)-1))
 * ```
 * 
 * Constraint T:
 *   Constrain input and output types to float32 tensors.
 *   Allowed Types: tensor_float
 * Input T X:
 *   Input tensor
 *   Allowed Types: tensor_float
 * Output T Y:
 *   Output tensor
 *   Allowed Types: tensor_float
 * Attribute FLOAT alpha (optional):
 *   The Alpha value in Celu formula which control the shape of the unit. The
 *   default value is 1.0.
 *
 * @since version 12
 *
 * @see github/workspace/onnx/defs/math/defs.cc:523
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Celu
 */

operator_status
prepare_operator__ai_onnx__celu__12(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__celu__12;

typedef struct {
// no attributes
} context_operator__ai_onnx__celu__12;

operator_executer
resolve_operator__ai_onnx__celu__12(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__celu__12(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__celu__12__T_tensor_float(
    node_context *ctx
);

# endif