//this file was generated by ../../../../../../../../connx/connx_ajit/scripts/onnx_generator/OperatorHeader.py
# ifndef OPERATOR_OPERATOR__AI_ONNX__SPLIT__1_H
# define OPERATOR_OPERATOR__AI_ONNX__SPLIT__1_H

# include "operators/operator.h"
# include "operators/operator_stub.h"
# include "operators/operator_info.h"

/**
 * ai.onnx operator 'Split' version 1
 *
 * @param[in]  ctx  Operator context
 * @return          Status code
 *
 * Split a tensor into a list of tensors, along the specified
 * 'axis'. The lengths of the split can be specified using argument 'axis' or
 * optional second input blob to the operator. Otherwise, the tensor is split
 * to equal sized parts.
 * 
 * Constraint T:
 *   Constrain input types to float tensors.
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Input T input:
 *   The tensor to split
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * 
 * Input T split:
 *   Optional list of output lengths (see also arg 'split')
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Output T outputs...:
 *   One or more outputs forming list of tensors after splitting
 *   Allowed Types: tensor_double, tensor_float, tensor_float16
 * Attribute INT axis (optional):
 *   Which axis to split on
 * 
 * Attribute INTS split (optional):
 *   length of each output
 *
 * @since version 1
 *
 * @see github/workspace/onnx/defs/tensor/old.cc:4271
 * @see https://github.com/onnx/onnx/blob/master/docs/Operators.md#Split
 */

operator_status
prepare_operator__ai_onnx__split__1(
    node_context *ctx
);

extern operator_info info_operator__ai_onnx__split__1;

typedef struct {
// no attributes
} context_operator__ai_onnx__split__1;

operator_executer
resolve_operator__ai_onnx__split__1(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__split__1(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__split__1__T_tensor_double(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__split__1__T_tensor_float(
    node_context *ctx
);

operator_status
execute_operator__ai_onnx__split__1__T_tensor_float16(
    node_context *ctx
);

# endif